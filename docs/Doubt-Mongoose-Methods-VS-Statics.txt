$ In Mongoose, Schema object provide us way to create helpers function for data manipulation.
Such as
-i need to create a fetch the all user from the Collection
-fucntion to fetch the initials from the firstName and the LastName from a document.
- function to check the user weather it is exist in our database or not.

All this can be done with the help of Schema object.

There are two ways to create helpers function..
? 1. Instance Methods
? 2. Static Methods

We know the basic difference between these two methods,i.e
+ Instance methods are called by the instance of class, i.e object of class, and have access to current instance
and 
+ Static methods are called directly by the class, and have access to class data.

Example: 
1: If i want to fetch the initials from the firstName and the LastName from of a document that is need to access the data of the current instance. hence here i will use instance methods
// here we define the instance methods using our schema
> userSchema.methods.getInitials = function() {
>   return this.firstName[0] + this.lastName[0]
> }
// This method will be accessible via a model instance:
> let model = new UserModel({
>   firstName: 'Thomas',
>   lastName: 'Anderson'
> })
> let initials = model.getInitials()
> console.log(initials) // This will output: TA

2. Now if i want to access the class static methods, i.e here our class is Model and its Static methods are find(), save(), deleteOne() etc..
hence if i want to access the class methods to interact directly with the database then i have to use static methods.

> userSchema.statics.getUsers = function() {
>   return new Promise((resolve, reject) => {
>     this.find((err, docs) => {
>       if(err) {
>         console.error(err)
>         return reject(err)
>       }
>       
>       resolve(docs)
>     })
>   })
> }
// Calling getUsers on the Model class will return all the users in the database:
> UserModel.getUsers()
>   .then(docs => {
>     console.log(docs)
>   })
>   .catch(err => {
>     console.error(err)
>   })